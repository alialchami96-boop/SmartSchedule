# 🏗️ الهيكلية الكاملة لمشروع SmartSchedule

```
SmartSchedule/
│
├── 📁 app/
│   ├── 📁 src/
│   │   ├── 📁 main/
│   │   │   ├── 📁 java/com/smartschedule/
│   │   │   │   │
│   │   │   │   ├── 📄 SmartScheduleApp.kt
│   │   │   │   ├── 📄 MainActivity.kt
│   │   │   │   │
│   │   │   │   ├── 📁 data/
│   │   │   │   │   ├── 📁 database/
│   │   │   │   │   │   ├── 📄 AppDatabase.kt
│   │   │   │   │   │   ├── 📄 Converters.kt
│   │   │   │   │   │   │
│   │   │   │   │   │   ├── 📁 entities/
│   │   │   │   │   │   │   ├── 📄 Subject.kt
│   │   │   │   │   │   │   ├── 📄 Teacher.kt
│   │   │   │   │   │   │   ├── 📄 SchoolClass.kt
│   │   │   │   │   │   │   ├── 📄 Room.kt
│   │   │   │   │   │   │   ├── 📄 LessonEntity.kt
│   │   │   │   │   │   │   ├── 📄 TimeSlot.kt
│   │   │   │   │   │   │   ├── 📄 TeacherSubjectCrossRef.kt
│   │   │   │   │   │   │   └── 📄 SubjectWithTeachers.kt
│   │   │   │   │   │   │
│   │   │   │   │   │   └── 📁 dao/
│   │   │   │   │   │       ├── 📄 SubjectDao.kt
│   │   │   │   │   │       ├── 📄 TeacherDao.kt
│   │   │   │   │   │       ├── 📄 ClassDao.kt
│   │   │   │   │   │       ├── 📄 RoomDao.kt
│   │   │   │   │   │       ├── 📄 LessonDao.kt
│   │   │   │   │   │       └── 📄 TimeSlotDao.kt
│   │   │   │   │   │
│   │   │   │   │   ├── 📁 repository/
│   │   │   │   │   │   ├── 📄 TimetableRepositoryImpl.kt
│   │   │   │   │   │   │
│   │   │   │   │   │   └── 📁 mappers/
│   │   │   │   │   │       ├── 📄 LessonMapper.kt
│   │   │   │   │   │       └── 📄 SubjectMapper.kt
│   │   │   │   │   │
│   │   │   │   │   ├── 📁 local/
│   │   │   │   │   │   └── 📄 PreferencesManager.kt
│   │   │   │   │   │
│   │   │   │   │   └── 📁 di/
│   │   │   │   │       └── 📄 AppModule.kt
│   │   │   │   │
│   │   │   │   ├── 📁 domain/
│   │   │   │   │   ├── 📁 models/
│   │   │   │   │   │   ├── 📄 Lesson.kt
│   │   │   │   │   │   ├── 📄 Timetable.kt
│   │   │   │   │   │   ├── 📄 SubjectDomain.kt
│   │   │   │   │   │   ├── 📄 Enums.kt
│   │   │   │   │   │   ├── 📄 FitnessWeights.kt
│   │   │   │   │   │   └── 📄 FitnessWeightsPreset.kt
│   │   │   │   │   │
│   │   │   │   │   ├── 📁 repository/
│   │   │   │   │   │   └── 📄 TimetableRepository.kt
│   │   │   │   │   │
│   │   │   │   │   └── 📁 usecase/
│   │   │   │   │       ├── 📄 GenerateTimetableUseCase.kt
│   │   │   │   │       └── 📄 ExportTimetableUseCase.kt
│   │   │   │   │
│   │   │   │   ├── 📁 presentation/
│   │   │   │   │   ├── 📁 viewmodel/
│   │   │   │   │   │   ├── 📄 MainViewModel.kt
│   │   │   │   │   │   ├── 📄 GenerateViewModel.kt
│   │   │   │   │   │   ├── 📄 ViewTimetableViewModel.kt
│   │   │   │   │   │   ├── 📄 ManageSubjectsViewModel.kt
│   │   │   │   │   │   ├── 📄 ManageTeachersViewModel.kt
│   │   │   │   │   │   ├── 📄 ManageClassesViewModel.kt
│   │   │   │   │   │   └── 📄 FitnessWeightsViewModel.kt
│   │   │   │   │   │
│   │   │   │   │   ├── 📁 ui/
│   │   │   │   │   │   └── 📁 screens/
│   │   │   │   │   │       ├── 📄 MainScreen.kt
│   │   │   │   │   │       ├── 📄 GenerateTimetableScreen.kt
│   │   │   │   │   │       ├── 📄 ViewTimetableScreen.kt
│   │   │   │   │   │       ├── 📄 ManageSubjectsScreen.kt
│   │   │   │   │   │       ├── 📄 ManageTeachersScreen.kt
│   │   │   │   │   │       ├── 📄 ManageClassesScreen.kt
│   │   │   │   │   │       ├── 📄 FitnessWeightsScreen.kt
│   │   │   │   │   │       └── 📄 ExportDialog.kt
│   │   │   │   │   │
│   │   │   │   │   └── 📁 navigation/
│   │   │   │   │       ├── 📄 AppNavigation.kt
│   │   │   │   │       └── 📄 Destinations.kt
│   │   │   │   │
│   │   │   │   ├── 📁 ui/
│   │   │   │   │   └── 📁 theme/
│   │   │   │   │       └── 📄 Theme.kt
│   │   │   │   │
│   │   │   │   ├── 📁 utils/
│   │   │   │   │   └── 📁 algorithms/
│   │   │   │   │       ├── 📄 GeneticAlgorithmEngine.kt
│   │   │   │   │       └── 📄 HybridScheduler.kt
│   │   │   │   │
│   │   │   │   └── 📁 di/
│   │   │   │       └── 📄 PreferencesModule.kt
│   │   │   │
│   │   │   ├── 📁 res/
│   │   │   │   ├── 📁 values/
│   │   │   │   │   ├── 📄 strings.xml
│   │   │   │   │   ├── 📄 themes.xml
│   │   │   │   │   └── 📄 colors.xml
│   │   │   │   │
│   │   │   │   ├── 📁 xml/
│   │   │   │   │   ├── 📄 file_paths.xml
│   │   │   │   │   ├── 📄 data_extraction_rules.xml
│   │   │   │   │   └── 📄 backup_rules.xml
│   │   │   │   │
│   │   │   │   ├── 📁 drawable/
│   │   │   │   │   ├── 📄 ic_launcher_background.xml
│   │   │   │   │   └── 📄 ic_launcher_foreground.xml
│   │   │   │   │
│   │   │   │   └── 📁 mipmap-xxxhdpi/
│   │   │   │       ├── 🖼️ ic_launcher.png
│   │   │   │       └── 🖼️ ic_launcher_round.png
│   │   │   │
│   │   │   └── 📄 AndroidManifest.xml
│   │   │
│   │   ├── 📁 test/
│   │   │   └── 📁 java/com/smartschedule/
│   │   │       ├── 📄 GeneticAlgorithmTest.kt
│   │   │       └── 📄 RepositoryTest.kt
│   │   │
│   │   └── 📁 androidTest/
│   │       └── 📁 java/com/smartschedule/
│   │           └── 📄 ExampleInstrumentedTest.kt
│   │
│   ├── 📄 build.gradle (Module level)
│   ├── 📄 proguard-rules.pro
│   └── 📄 .gitignore
│
├── 📁 gradle/
│   └── 📁 wrapper/
│       ├── 📄 gradle-wrapper.jar
│       └── 📄 gradle-wrapper.properties
│
├── 📄 build.gradle (Project level)
├── 📄 settings.gradle
├── 📄 gradle.properties
├── 📄 gradlew
├── 📄 gradlew.bat
├── 📄 .gitignore
├── 📄 README.md
└── 📄 API_DOCUMENTATION.md
```

---

## 📊 إحصائيات المشروع

### عدد الملفات حسب النوع:

| النوع | العدد | الوصف |
|------|------|-------|
| 📄 Kotlin Files | 54 | الملفات البرمجية الرئيسية |
| 📄 XML Files | 9 | ملفات Resources و Configuration |
| 📄 Gradle Files | 4 | ملفات البناء والإعدادات |
| 📄 Documentation | 2 | README و API Docs |
| **المجموع** | **69** | **إجمالي الملفات** |

---

## 🏛️ البنية المعمارية (Clean Architecture)

```
┌─────────────────────────────────────────────────────────┐
│                   PRESENTATION LAYER                     │
│  ┌──────────────┐  ┌──────────────┐  ┌──────────────┐  │
│  │  UI Screens  │  │  ViewModels  │  │  Navigation  │  │
│  └──────────────┘  └──────────────┘  └──────────────┘  │
└──────────────────────────┬──────────────────────────────┘
                           │
                           ▼
┌─────────────────────────────────────────────────────────┐
│                     DOMAIN LAYER                         │
│  ┌──────────────┐  ┌──────────────┐  ┌──────────────┐  │
│  │   Models     │  │  UseCases    │  │ Repository   │  │
│  │              │  │              │  │  Interface   │  │
│  └──────────────┘  └──────────────┘  └──────────────┘  │
└──────────────────────────┬──────────────────────────────┘
                           │
                           ▼
┌─────────────────────────────────────────────────────────┐
│                      DATA LAYER                          │
│  ┌──────────────┐  ┌──────────────┐  ┌──────────────┐  │
│  │  Repository  │  │   Database   │  │ Preferences  │  │
│  │     Impl     │  │  (Room DB)   │  │  (DataStore) │  │
│  └──────────────┘  └──────────────┘  └──────────────┘  │
└─────────────────────────────────────────────────────────┘
```

---

## 🔑 الملفات الأساسية وأدوارها

### Core Files (3)
- `SmartScheduleApp.kt` - تطبيق Hilt الرئيسي
- `MainActivity.kt` - النشاط الرئيسي
- `AppModule.kt` - Dependency Injection

### Data Layer (20)
- **Entities** (8): نماذج قاعدة البيانات
- **DAOs** (6): واجهات الوصول للبيانات
- **Repository** (3): تطبيق وواجهة المستودع
- **Others** (3): Converters, PreferencesManager, Mappers

### Domain Layer (9)
- **Models** (6): نماذج منطق الأعمال
- **Repository** (1): واجهة المستودع
- **UseCases** (2): حالات الاستخدام

### Presentation Layer (17)
- **ViewModels** (7): حالة وإدارة البيانات
- **Screens** (8): واجهات المستخدم
- **Navigation** (2): التنقل بين الشاشات

### Utils (2)
- `GeneticAlgorithmEngine.kt` - الخوارزمية الجينية
- `HybridScheduler.kt` - جدولة هجينة

### Resources (9)
- XML files للإعدادات والنصوص

### Testing (3)
- Unit Tests و Integration Tests

---

## 🎯 نقاط القوة في الهيكلية

✅ **Clean Architecture** - فصل واضح للطبقات
✅ **MVVM Pattern** - ViewModel لكل شاشة
✅ **Repository Pattern** - طبقة وسيطة للبيانات
✅ **Dependency Injection** - Hilt/Dagger
✅ **Single Responsibility** - كل ملف له دور واحد
✅ **Testability** - سهولة كتابة الاختبارات
✅ **Scalability** - قابلية التوسع المستقبلي
✅ **Maintainability** - سهولة الصيانة

---

## 📝 ملاحظات مهمة

1. **لا توجد ملفات زائدة** - كل ملف له غرض محدد
2. **التنظيم واضح** - سهل للمطورين الجدد فهمه
3. **المعايير الاحترافية** - يتبع أفضل ممارسات Android
4. **جاهز للإنتاج** - يمكن نشره على Play Store

هل تريد تفصيل أكثر لأي جزء من الهيكلية؟